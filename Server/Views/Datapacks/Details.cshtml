@model Server.Models.DetailsViewModel

@{
    ViewData["Title"] = "Details";
}

@if (Model.IsOwner)
{ 
<div class="fixed-action-btn" style="bottom: 45px; right: 24px;">
	<a id="menu" class="btn btn-floating btn-large cyan">
		<i class="material-icons">menu</i>
	</a>
	<ul>
		<li><a asp-action="Edit" asp-route-id="@Model.model.Id" class="btn-floating green"><i class="material-icons">edit</i></a> Edit Page</li>
		<li><a asp-action="AddRelease" asp-route-id="@Model.model.Id" class="btn-floating red darken-4"><i class="material-icons">cloud_upload</i></a> Add Release</li>
	</ul>
</div>

}

<div class="row">
	<div class="col s8 m8">
		<div class="row valign-wrapper">
			<div class="col s12 m5">
				<h3>@Model.model.Name</h3>
			</div>
			<div class="col s12 m7">
				<div class="row">
					<div class="col s12">
							@foreach (var chip in Model.model.Tags)
							{
								<div class="chip">
									@chip.Tag
								</div>
							}
					</div>
				</div>
				@if (!Model.model.Versions.Count != 0)
				{
				<div class="row">
					<div class="col s12">
						<a class="btn" asp-action="Download" asp-route-id="@Model.model.Id">Download Latest</a>
					</div>
				</div>
				}
			</div>
		</div>
		<div class="row">
			<div class="col s8 hide-on-med-and-down">
				<form asp-action="Upvote" method="post" asp-route-id="@Model.model.Id"><button type="submit" class="btn-large"><i class="material-icons">arrow_upward</i> Upvote</button></form>
				<form asp-action="Downvote" method="post" asp-route-id="@Model.model.Id"><button type="submit" class="btn-large"><i class="material-icons">arrow_downward</i> Downvote</button></form>
			</div>
			<div class="col s4">
				<div class="right">Votes: <span class="grey-text text-darken-3">@Model.model.LikeDiff</span></div><br />
				<div class="right">Views: <span class="grey-text text-darken-3">@Model.model.Views</span></div><br />
				<div class="right">Downloads: <span class="grey-text text-darken-3">@Model.model.Downloads</span></div><br />
			</div>
		</div>
	</div>
</div>
<hr />
<div class="row">
	<div class="col m7 s12">
		<p class="">
			@Model.model.Description
		</p>
	</div>
	<div class="col m5 s12">
		<h4>Releases:</h4>
		<!--<ul class="collapsible">
			@foreach (var version in Model.model.Versions)
			{
			  <li>
				  <div class="collapsible-header">
				  	<i class="material-icons">filter_drama</i>
				  	@version.Name
				  	@if (version.PreRelease)
				  	{
				  		<span class="new badge" data-badge-caption="Pre-Release"></span>
				  	}
				  </div>
				<div class="collapsible-body"><p>@version.Notes</p></div>
			  </li>
			}
		</ul>-->
		@foreach (var version in Model.model.Versions)
		{ 
		<div class="card sticky-action">
			<div class="card-content">
				<span class="card-title activator grey-text text-darken-4">@version.Name<i class="material-icons right">more_vert</i></span>
				<span class="truncate grey-text text-darken-2" style="white-space: pre-line">@version.Notes</span>
			</div>
			<div class="card-reveal">
				<p class="card-title grey-text text-darken-4">@version.Name<i class="material-icons right">close</i></p>
				<span class="grey-text" style="white-space: pre-line">@version.Notes</span>
			</div>
			<div class="card-action">
				<a asp-action="Download" asp-route-id="@Model.model.Id" asp-route-Version="@version.Name">Download</a>
			</div>
		</div>
		}
	</div>
</div>
<hr />
<div class="row">
	<div class="comments col s12">
		@if (User.Identity.IsAuthenticated)
		{
		<form asp-action="Comment" asp-route-id="@Model.model.Id">
			<div class="input-field">
				<textarea name="message" id="message" class="materialize-textarea"></textarea>
				<label for="message">Message</label>
			</div>
			<button class="btn waves-effect waves-light" type="submit" name="action">
				Post Comment
				<i class="material-icons right">send</i>
			</button>
		</form>
		}
		<ul class="pagination">
			@{
				var parms1 = new Dictionary<string, string>
						{
							{ "commentPage", (Model.Comments.PageIndex - 1).ToString() }
						};
				var parms2 = new Dictionary<string, string>
						{
							{ "commentPage", (Model.Comments.PageIndex + 1).ToString() }
						};
			}
			@if (Model.Comments.HasPreviousPage)
			{
				<li class="waves-effect"><a asp-action="Details" asp-route-id="@Model.model.Id" asp-all-route-data="@parms1">
					<i class="material-icons">chevron_left</i></a></li>
			}
			else
			{
				<li class="disabled"><a href="#!"><i class="material-icons">chevron_left</i></a></li>
			}

			@{
				var Amount = 5;
				for (int i = -Amount; i <= Amount; i++)
				{
					int i3 = Model.Comments.PageIndex + i;
					string Class = "waves-effect";
					if (i == 0)
					{
						Class = "active";
					}
					if (Model.Comments.IsPage(i3))
					{
					<li class="@Class"><a asp-action="Details" asp-route-id="@Model.model.Id" asp-route-commentPage="@i3">@i3</a></li>
					}
				}
			}

			@if (Model.Comments.HasPreviousPage)
			{
				<li class="waves-effect"><a asp-action="Details" asp-route-id="@Model.model.Id" asp-all-route-data="@parms2">
					<i class="material-icons">chevron_right</i></a></li>
			}
			else
			{ 
				<li class="disabled"><a href="#!"><i class="material-icons">chevron_right</i></a></li>
			}
		</ul>
		<ul>
			@foreach (var comment in Model.Comments)
			{
				<li>
					@if (comment.Author == Model.model.Author)
					{
						<span class="new badge" data-badge-caption="Owner"></span>
					}
					@comment.Author.UserName <i>~ @comment.Creation.ToString("g")</i>
					<blockquote>
						@comment.Message
					</blockquote>
				</li>
			}
		</ul>
	</div>
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model.model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
